package com.abstractlabs.toe.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelScorpion extends ModelBase {
  //fields
    ModelRenderer Body;
    ModelRenderer Left_Arm_2;
    ModelRenderer Left_Claw_1;
    ModelRenderer Left_Claw_2;
    ModelRenderer Right_Arm_2;
    ModelRenderer Right_Claw_1;
    ModelRenderer Right_Claw_2;
    ModelRenderer Left_Arm_1;
    ModelRenderer Right_Arm_1;
    ModelRenderer Tail_1;
    ModelRenderer Tail_2;
    ModelRenderer Tail_3;
    ModelRenderer Tail_4;
    ModelRenderer Tail_5;
    ModelRenderer Tail_7;
    ModelRenderer Tail_8;
    ModelRenderer Tail_9;
    ModelRenderer Tail_10;
    ModelRenderer Left_Leg_1;
    ModelRenderer Left_Leg_2;
    ModelRenderer Left_Leg_3;
    ModelRenderer Left_Leg_4;
    ModelRenderer Right_Leg_1;
    ModelRenderer Right_Leg_2;
    ModelRenderer Right_Leg_3;
    ModelRenderer Right_Leg_4;
  
  public ModelScorpion() {
    textureWidth = 64;
    textureHeight = 64;
    
      Body = new ModelRenderer(this, 0, 0);
      Body.addBox(-3F, -3F, -3F, 6, 4, 12);
      Body.setRotationPoint(0F, 21F, -4F);
      Body.setTextureSize(64, 64);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      Left_Arm_2 = new ModelRenderer(this, 48, 7);
      Left_Arm_2.addBox(0F, 0F, 0F, 2, 2, 6);
      Left_Arm_2.setRotationPoint(5F, 19F, -13F);
      Left_Arm_2.setTextureSize(64, 64);
      Left_Arm_2.mirror = true;
      setRotation(Left_Arm_2, 0F, 0.1047198F, 0F);
      Left_Claw_1 = new ModelRenderer(this, 56, 15);
      Left_Claw_1.addBox(0F, 0F, -2F, 2, 1, 2);
      Left_Claw_1.setRotationPoint(5F, 19F, -13F);
      Left_Claw_1.setTextureSize(64, 64);
      Left_Claw_1.mirror = true;
      setRotation(Left_Claw_1, -0.1396263F, 0.1047198F, 0F);
      Left_Claw_2 = new ModelRenderer(this, 56, 15);
      Left_Claw_2.addBox(0F, 0F, -2F, 2, 1, 2);
      Left_Claw_2.setRotationPoint(5F, 20F, -13F);
      Left_Claw_2.setTextureSize(64, 64);
      Left_Claw_2.mirror = true;
      setRotation(Left_Claw_2, 0.1396263F, 0.1047198F, 0F);
      Right_Arm_2 = new ModelRenderer(this, 48, 7);
      Right_Arm_2.addBox(0F, 0F, 0F, 2, 2, 6);
      Right_Arm_2.setRotationPoint(-7F, 19F, -13F);
      Right_Arm_2.setTextureSize(64, 64);
      Right_Arm_2.mirror = true;
      setRotation(Right_Arm_2, 0F, -0.1047198F, 0F);
      Right_Claw_1 = new ModelRenderer(this, 56, 15);
      Right_Claw_1.addBox(0F, 0F, -2F, 2, 1, 2);
      Right_Claw_1.setRotationPoint(-7F, 19F, -13F);
      Right_Claw_1.setTextureSize(64, 64);
      Right_Claw_1.mirror = true;
      setRotation(Right_Claw_1, -0.1396263F, -0.1047198F, 0F);
      Right_Claw_2 = new ModelRenderer(this, 56, 15);
      Right_Claw_2.addBox(0F, 0F, -2F, 2, 1, 2);
      Right_Claw_2.setRotationPoint(-7F, 20F, -13F);
      Right_Claw_2.setTextureSize(64, 64);
      Right_Claw_2.mirror = true;
      setRotation(Right_Claw_2, 0.1396263F, -0.1047198F, 0F);
      Left_Arm_1 = new ModelRenderer(this, 50, 0);
      Left_Arm_1.addBox(0F, 0F, 0F, 2, 2, 5);
      Left_Arm_1.setRotationPoint(6F, 19F, -9F);
      Left_Arm_1.setTextureSize(64, 64);
      Left_Arm_1.mirror = true;
      setRotation(Left_Arm_1, 0F, -1.012291F, 0F);
      Right_Arm_1 = new ModelRenderer(this, 50, 0);
      Right_Arm_1.addBox(0F, 0F, 0F, 2, 2, 5);
      Right_Arm_1.setRotationPoint(-7F, 19F, -7F);
      Right_Arm_1.setTextureSize(64, 64);
      Right_Arm_1.mirror = true;
      setRotation(Right_Arm_1, 0F, 1.012291F, 0F);
      Tail_1 = new ModelRenderer(this, 0, 58);
      Tail_1.addBox(0F, 0F, 0F, 6, 4, 2);
      Tail_1.setRotationPoint(-3F, 18F, 4F);
      Tail_1.setTextureSize(64, 64);
      Tail_1.mirror = true;
      setRotation(Tail_1, 0.2617994F, 0F, 0F);
      Tail_2 = new ModelRenderer(this, 0, 53);
      Tail_2.addBox(0F, 0F, 0F, 4, 3, 2);
      Tail_2.setRotationPoint(-2F, 18F, 5F);
      Tail_2.setTextureSize(64, 64);
      Tail_2.mirror = true;
      setRotation(Tail_2, 0.6108652F, 0F, 0F);
      Tail_3 = new ModelRenderer(this, 0, 49);
      Tail_3.addBox(0F, 0F, 0F, 4, 2, 2);
      Tail_3.setRotationPoint(-2F, 18F, 6F);
      Tail_3.setTextureSize(64, 64);
      Tail_3.mirror = true;
      setRotation(Tail_3, 1.047198F, 0F, 0F);
      Tail_4 = new ModelRenderer(this, 0, 49);
      Tail_4.addBox(0F, -0.1F, 0F, 4, 2, 2);
      Tail_4.setRotationPoint(-2F, 17F, 7F);
      Tail_4.setTextureSize(64, 64);
      Tail_4.mirror = true;
      setRotation(Tail_4, 1.22173F, 0F, 0F);
      Tail_5 = new ModelRenderer(this, 0, 44);
      Tail_5.addBox(0F, 0F, -3F, 4, 2, 3);
      Tail_5.setRotationPoint(-2F, 13F, 8F);
      Tail_5.setTextureSize(64, 64);
      Tail_5.mirror = true;
      setRotation(Tail_5, 1.396263F, 0F, 0F);
      Tail_7 = new ModelRenderer(this, 0, 39);
      Tail_7.addBox(0F, 0F, 0F, 2, 2, 3);
      Tail_7.setRotationPoint(-1F, 14F, 8F);
      Tail_7.setTextureSize(64, 64);
      Tail_7.mirror = true;
      setRotation(Tail_7, 1.762782F, 0F, 0F);
      Tail_8 = new ModelRenderer(this, 0, 39);
      Tail_8.addBox(0F, 0F, 0F, 2, 2, 3);
      Tail_8.setRotationPoint(-1F, 12F, 8F);
      Tail_8.setTextureSize(64, 64);
      Tail_8.mirror = true;
      setRotation(Tail_8, 2.234021F, 0F, 0F);
      Tail_9 = new ModelRenderer(this, 0, 39);
      Tail_9.addBox(0F, 0F, 0F, 2, 2, 3);
      Tail_9.setRotationPoint(-1F, 10F, 7F);
      Tail_9.setTextureSize(64, 64);
      Tail_9.mirror = true;
      setRotation(Tail_9, 2.792527F, 0F, 0F);
      Tail_10 = new ModelRenderer(this, 0, 35);
      Tail_10.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
      Tail_10.setRotationPoint(0F, 8F, 5F);
      Tail_10.setTextureSize(64, 64);
      Tail_10.mirror = true;
      setRotation(Tail_10, 2.984513F, 0F, 0F);
      Left_Leg_1 = new ModelRenderer(this, 0, 25);
      Left_Leg_1.addBox(0F, 0F, 0F, 7, 1, 1);
      Left_Leg_1.setRotationPoint(2F, 20F, -4F);
      Left_Leg_1.setTextureSize(64, 64);
      Left_Leg_1.mirror = true;
      setRotation(Left_Leg_1, 0F, 0.1396263F, 0.4363323F);
      Left_Leg_2 = new ModelRenderer(this, 0, 25);
      Left_Leg_2.addBox(0F, 0F, 0F, 7, 1, 1);
      Left_Leg_2.setRotationPoint(2F, 20F, -2F);
      Left_Leg_2.setTextureSize(64, 64);
      Left_Leg_2.mirror = true;
      setRotation(Left_Leg_2, 0F, 0.0698132F, 0.4363323F);
      Left_Leg_3 = new ModelRenderer(this, 0, 25);
      Left_Leg_3.addBox(0F, 0F, 0F, 7, 1, 1);
      Left_Leg_3.setRotationPoint(2F, 20F, 0F);
      Left_Leg_3.setTextureSize(64, 64);
      Left_Leg_3.mirror = true;
      setRotation(Left_Leg_3, 0F, -0.0698132F, 0.4363323F);
      Left_Leg_4 = new ModelRenderer(this, 0, 25);
      Left_Leg_4.addBox(0F, 0F, 0F, 7, 1, 1);
      Left_Leg_4.setRotationPoint(2F, 20F, 2F);
      Left_Leg_4.setTextureSize(64, 64);
      Left_Leg_4.mirror = true;
      setRotation(Left_Leg_4, 0F, -0.1396263F, 0.4363323F);
      Right_Leg_1 = new ModelRenderer(this, 0, 25);
      Right_Leg_1.addBox(-7F, 0F, 0F, 7, 1, 1);
      Right_Leg_1.setRotationPoint(-2F, 20F, -4F);
      Right_Leg_1.setTextureSize(64, 64);
      Right_Leg_1.mirror = true;
      setRotation(Right_Leg_1, 0F, -0.1396263F, -0.4363323F);
      Right_Leg_2 = new ModelRenderer(this, 0, 25);
      Right_Leg_2.addBox(-7F, 0F, 0F, 7, 1, 1);
      Right_Leg_2.setRotationPoint(-2F, 20F, -2F);
      Right_Leg_2.setTextureSize(64, 64);
      Right_Leg_2.mirror = true;
      setRotation(Right_Leg_2, 0F, -0.0698132F, -0.4363323F);
      Right_Leg_3 = new ModelRenderer(this, 0, 25);
      Right_Leg_3.addBox(-7F, 0F, 0F, 7, 1, 1);
      Right_Leg_3.setRotationPoint(-2F, 20F, 0F);
      Right_Leg_3.setTextureSize(64, 64);
      Right_Leg_3.mirror = true;
      setRotation(Right_Leg_3, 0F, 0.0698132F, -0.4363323F);
      Right_Leg_4 = new ModelRenderer(this, 0, 25);
      Right_Leg_4.addBox(-7F, 0F, 0F, 7, 1, 1);
      Right_Leg_4.setRotationPoint(-2F, 20F, 2F);
      Right_Leg_4.setTextureSize(64, 64);
      Right_Leg_4.mirror = true;
      setRotation(Right_Leg_4, 0F, 0.1396263F, -0.4363323F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Body.render(f5);
    Left_Arm_2.render(f5);
    Left_Claw_1.render(f5);
    Left_Claw_2.render(f5);
    Right_Arm_2.render(f5);
    Right_Claw_1.render(f5);
    Right_Claw_2.render(f5);
    Left_Arm_1.render(f5);
    Right_Arm_1.render(f5);
    Tail_1.render(f5);
    Tail_2.render(f5);
    Tail_3.render(f5);
    Tail_4.render(f5);
    Tail_5.render(f5);
    Tail_7.render(f5);
    Tail_8.render(f5);
    Tail_9.render(f5);
    Tail_10.render(f5);
    Left_Leg_1.render(f5);
    Left_Leg_2.render(f5);
    Left_Leg_3.render(f5);
    Left_Leg_4.render(f5);
    Right_Leg_1.render(f5);
    Right_Leg_2.render(f5);
    Right_Leg_3.render(f5);
    Right_Leg_4.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z) {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
	  float f6 = ((float)Math.PI / 4F);
      this.Right_Leg_2.rotateAngleZ = -f6;
      this.Left_Leg_2.rotateAngleZ = f6;
      this.Right_Leg_4.rotateAngleZ = -f6 * 0.74F;
      this.Left_Leg_4.rotateAngleZ = f6 * 0.74F;
      this.Right_Leg_1.rotateAngleZ = -f6 * 0.74F;
      this.Left_Leg_1.rotateAngleZ = f6 * 0.74F;
      this.Right_Leg_3.rotateAngleZ = -f6;
      this.Left_Leg_3.rotateAngleZ = f6;
      float f7 = -0.0F;
      float f8 = 0.3926991F;
//      this.Left_Leg_1.rotateAngleY = f8 * 2.0F + f7;
//      this.Left_Leg_2.rotateAngleY = -f8 * 2.0F - f7;
//      this.Left_Leg_3.rotateAngleY = f8 * 1.0F + f7;
//      this.Left_Leg_4.rotateAngleY = -f8 * 1.0F - f7;
//      this.Right_Leg_1.rotateAngleY = -f8 * 1.0F + f7;
//      this.Right_Leg_2.rotateAngleY = f8 * 1.0F - f7;
//      this.Right_Leg_3.rotateAngleY = -f8 * 2.0F + f7;
//      this.Right_Leg_4.rotateAngleY = f8 * 2.0F - f7;
      float f9 = -(MathHelper.cos(f * 0.6662F * 2.0F + 0.0F) * 0.4F) * f1;
      float f10 = -(MathHelper.cos(f * 0.6662F * 2.0F + (float)Math.PI) * 0.4F) * f1;
      float f11 = -(MathHelper.cos(f * 0.6662F * 2.0F + ((float)Math.PI / 2F)) * 0.4F) * f1;
      float f12 = -(MathHelper.cos(f * 0.6662F * 2.0F + ((float)Math.PI * 3F / 2F)) * 0.4F) * f1;
      float f13 = Math.abs(MathHelper.sin(f * 0.6662F + 0.0F) * 0.4F) * f1;
      float f14 = Math.abs(MathHelper.sin(f * 0.6662F + (float)Math.PI) * 0.4F) * f1;
      float f15 = Math.abs(MathHelper.sin(f * 0.6662F + ((float)Math.PI / 2F)) * 0.4F) * f1;
      float f16 = Math.abs(MathHelper.sin(f * 0.6662F + ((float)Math.PI * 3F / 2F)) * 0.4F) * f1;
//      this.Left_Leg_1.rotateAngleY += f9;
//      this.Left_Leg_2.rotateAngleY += -f9;
//      this.Left_Leg_3.rotateAngleY += f10;
//      this.Left_Leg_4.rotateAngleY += -f10;
//      this.Right_Leg_1.rotateAngleY += f11;
//      this.Right_Leg_2.rotateAngleY += -f11;
//      this.Right_Leg_3.rotateAngleY += f12;
//      this.Right_Leg_4.rotateAngleY += -f12;
      
      this.Right_Leg_2.rotateAngleZ += f13;
      this.Left_Leg_2.rotateAngleZ += -f13;
      this.Right_Leg_4.rotateAngleZ += f14;
      this.Left_Leg_4.rotateAngleZ += -f14;
      this.Right_Leg_1.rotateAngleZ += f15;
      this.Left_Leg_1.rotateAngleZ += -f15;
      this.Right_Leg_3.rotateAngleZ += f16;
      this.Left_Leg_3.rotateAngleZ += -f16;
  }

}
